{"version":3,"sources":["components/Filter.js","components/Form.js","components/Persons.js","services/phonebook.js","App.js","index.js"],"names":["Filter","handleSearch","onChange","Form","props","handleNameChange","handleNumberChange","newContactName","newContactNumber","addContact","onSubmit","value","required","type","Persons","contacts","deleteContact","names","map","contact","key","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","status","className","App","useState","setContacts","setNewContactName","setNewContactNumber","setMessage","setStatus","useEffect","phoneService","phoneNumbers","event","newSearch","target","newResult","filter","toLowerCase","includes","preventDefault","contactObject","newContact","some","item","existingContact","find","contactId","updatedContact","window","confirm","returnedContact","setTimeout","catch","err","_updateName","console","log","concat","error","success","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc1c5d27.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ handleSearch }) => {\n    return (\n    <div>\n        filter shown with<input onChange={handleSearch}></input>\n    </div>\n    )\n}\n\nexport default Filter","import React from 'react';\n\nconst Form = (props) => {\n    const { handleNameChange, handleNumberChange, newContactName, newContactNumber, addContact } = props\n    return (\n        <div>\n            <form onSubmit={addContact}>\n                <div>\n                    name: <input onChange={handleNameChange} value={newContactName} required/>\n                </div>\n                <div>\n                    number: <input onChange={handleNumberChange} value={newContactNumber} required/>\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Form;","import React from 'react';\n\nconst Persons = ({ contacts, deleteContact }) => {\n    const names = contacts && contacts.map(contact=>\n        // <Person  key={person.name} person={person}/>\n        <tr key={contact.name}>\n            <td>{contact.name}</td>\n            <td>{contact.number}</td>\n            <td><button onClick={()=>deleteContact(contact)}>X</button></td>\n        </tr>\n    )\n    return (\n        <div>\n             <table>\n                <tbody>\n                    {names}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Persons","import axios from \"axios\"\n\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst addNew = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst updateExisting = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, addNew, deleteContact, updateExisting}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Persons from './components/Persons'\nimport phoneService from './services/phonebook'\n\nconst Notification = ({ message, status }) => {\n  if(message===null) {\n    return null\n  }\n  return (\n    <div className={`notification ${status}`}>\n      <em>{message}</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ contacts, setContacts] = useState([])\n  const [ newContactName, setNewContactName ] = useState('')\n  const [ newContactNumber, setNewContactNumber ] = useState('')\n  const [message, setMessage] = useState(null)\n  const [status, setStatus] = useState('') //Set success or fail status according to server response\n\n  useEffect(() => {\n    phoneService\n    .getAll()\n    .then(phoneNumbers => {\n      setContacts(phoneNumbers)\n    })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewContactName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewContactNumber(event.target.value)\n  }\n\n  const handleNameSearch = (event) => {\n    const newSearch = event.target.value\n    const newResult = contacts.filter(contact => contact.name.toLowerCase().includes(newSearch))\n    setContacts(newResult)\n  }\n\n  const addContact = (event) => {\n    event.preventDefault()\n    const newContact = {\n      name: newContactName,\n      number: newContactNumber\n    }\n\n    //Helper function to update existing contact\n    const _updateName = (name) => {\n      const existingContact = contacts.find(contact => contact.name === name)\n      const contactId = existingContact.id\n      const updatedContact = { ...existingContact, number: newContactNumber }\n\n      if(window.confirm(`${name} already added to phonebook. Replace old number with new one?`)){\n        phoneService.updateExisting(contactId, updatedContact)\n        .then(returnedContact => {\n          setContacts(contacts.map(contact => contact.id !== contactId ? contact : returnedContact))\n          setMessage(`${name} updated`)\n          setStatus('success')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(err => {\n          setMessage(`${name} has been removed from server. Please refresh your page`)\n          setStatus('fail')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n      }\n      setNewContactName('')\n      setNewContactNumber('')\n    }\n\n    //Helper function to add new contact\n    const _addContact = (contactObject) => {\n      console.log(contactObject)\n      phoneService\n      .addNew(contactObject)\n      .then(returnedContact => {\n        setContacts(contacts.concat(returnedContact))\n        setMessage(`${returnedContact.name} added to phonebook`)\n        setStatus('success')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setMessage(error.response.data.error)\n        setStatus('fail')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      setNewContactName('')\n      setNewContactNumber('')\n    }\n\n    //Check if contact name already exists\n    contacts.some(item => item.name === newContactName)\n    ? _updateName(newContactName) //update existing\n    : _addContact(newContact) //add new\n  }\n\n  const deleteContact = (contact) => {\n    if(window.confirm(`Delete ${contact.name}`)) {\n      phoneService.deleteContact(contact.id)\n      .then(success => {\n        setContacts(contacts.filter(person => person.id !== contact.id))\n        setMessage(`${contact.name} deleted!`)\n        setStatus('success')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(err => {\n        setMessage(`${contact.name} has already been removed from server. Please refresh your page`)\n        setStatus('fail')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n    }\n  }\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message={message} status={status}/>\n      <Filter handleSearch={handleNameSearch}/>\n      <h3>add a new</h3>\n      <Form\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newContactName={newContactName}\n        newContactNumber={newContactNumber}\n        addContact={addContact}\n      />\n      <h3>Numbers</h3>\n      <Persons contacts={contacts} deleteContact={deleteContact} />\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}